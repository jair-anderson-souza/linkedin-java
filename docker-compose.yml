version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: linkedin-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: linkedin_core
      MYSQL_USER: linkedin_user
      MYSQL_PASSWORD: linkedin_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts/mysql:/docker-entrypoint-initdb.d
    networks:
      - linkedin-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  neo4j:
    image: neo4j:5.11
    container_name: linkedin-neo4j
    environment:
      NEO4J_AUTH: neo4j/neo4jpassword
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: 'true'
      NEO4J_apoc_import_file_enabled: 'true'
      NEO4J_apoc_import_file_use__neo4j__config: 'true'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - linkedin-network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p neo4jpassword 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: linkedin-redis
    ports:
      - "6379:6379"
    networks:
      - linkedin-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  core-service:
    build:
      context: ./core-service
      dockerfile: Dockerfile
    container_name: linkedin-core-service
    environment:
      - PORT=8080
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=linkedin_core
      - DB_USER=linkedin_user
      - DB_PASSWORD=linkedin_pass
      - JWT_SECRET=your_jwt_secret_key_change_in_production
      - JWT_EXPIRES_IN=86400000
      - GRAPH_SERVICE_URL=http://people-graph-service:8081
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - linkedin-network
    volumes:
      - core_service_logs:/app/logs
      - core_service_uploads:/app/uploads
    restart: unless-stopped

  people-graph-service:
    build:
      context: ./people-graph-service
      dockerfile: Dockerfile
    container_name: linkedin-people-graph-service
    environment:
      - PORT=8081
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
      - CORE_SERVICE_URL=http://core-service:8080
      - JWT_SECRET=your_jwt_secret_key_change_in_production
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8081:8081"
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - linkedin-network
    volumes:
      - people_graph_service_logs:/app/logs
    restart: unless-stopped

volumes:
  mysql_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  core_service_logs:
  core_service_uploads:
  people_graph_service_logs:

networks:
  linkedin-network:
    driver: bridge